var eco_level = 0;
var ftd_level = 0;

function updateTree(mod) {
  var bb = treePath.getBBox()
  var bby = bb.y
  var bbh = bb.height
  //---bottom of heart---
  var base = bby + bbh

  if (eco_level < 1 && mod =='up') {
    eco_level += .05
  } else if (eco_level > 0 && mod =='down'){
    eco_level -= .05
  }
  var percent = (1 - eco_level) * base;
  $("#treeRect").attr("y", percent)
  $('p').text('Eco drive level: ' + parseInt(eco_level*100) + '%')
}

function updateEcoGauge(mod){
  if(mod != ''){
    eco_level = mod == 'up'? eco_level + .05 : eco_level-.05
  }
  $('#gaugeEco').empty();
    
    Gauge(
      document.getElementById("gaugeEco"), {
      max: 100,
      value: parseInt(eco_level * 100),
      unit: '',
      unity: function (unit) { return unit; },
      dialStartAngle: 0,
      dialEndAngle: 180,
      label: function (value) {
        return Math.round(value * 100) / 100 + '%';
      }
    }
    );
    $('.containerDisplaySection').append(
      `<div> <button id='incrEcoVal'>incrEcoVal</button>
    <button id='decrEcoVal'>decrEcoVal</button></div>`);
}

//aggiungi chiamata a messaggio d'allarme se il livello di ftd < SOGLIA
function updateFtd(mod) {
  var bb = ftdPath.getBBox()
  var bby = bb.y
  var bbh = bb.height
  //---bottom of heart---
  var base = bby + bbh

  if (ftd_level < 1 && mod =='up') {
    ftd_level += .05
  } else if (ftd_level > 0 && mod =='down'){
    ftd_level -= .05
  }
  var percent = (1 - ftd_level) * base;
  $("#ftdRect").attr("y", percent)
  $('p').text('Fitness to drive level: ' + parseInt(ftd_level*100) + '%')
}

function updateFtdGauge(mod){
  if(mod != ''){
    ftd_level = mod == 'up'? ftd_level + .05 : ftd_level-.05
  }
  $('#gaugeFtd').empty();
    
    Gauge(
      document.getElementById("gaugeFtd"), {
      max: 100,
      value: parseInt(ftd_level * 100),
      unit: '',
      unity: function (unit) { return unit; },
      dialStartAngle: 0,
      dialEndAngle: 180,
      label: function (value) {
        return Math.round(value * 100) / 100 + '%';
      }
    }
    );
    $('.containerDisplaySection').append(
      `<div><button id='incrFtdVal'>incrFtdVal</button>
    <button id='decrFtdVal'>decrFtdVal</button></div>`);
}


$(document).ready(() => {
  var fuel_level = 30;
  var water_level = 80;
  var treeVisible = false;
  var ecoGaugeVisible = false;
  var ftdGaugeVisible = false;
  var ftdVisible = false;

  $(".msgAlarm").hide();
  $(".msgSaving").hide()

  $(".btShowTree").on("click", () => {
    treeVisible = !treeVisible
    if (treeVisible) {
      if (ecoGaugeVisible) {
        $(".btShowEcoGauge").click()
      } else if(ftdVisible){
        $(".btShowFtd").click()
      } else if(ftdGaugeVisible){
        $('.btShowFtdGauge').click()
      }
      //Eco drive tree
      $('.containerDisplaySection').append(`<p class="text-white">Eco drive level: 0% </p>
    <svg version="1.1" id="treeSVG" xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 -1 568.031 568.03"
        style="enable-background:new 0 -1  568.031 568.03;" xml:space="preserve">
        <defs>
            <mask id="tree">
            <path fill=white d="M 149.4707 13.216797 C 143.46575 13.218376 139.59796 13.426851 138.86133 13.46875 C 134.22067 13.744175 130.54053 17.474575 130.32227 22.115234 C 127.75509 77.626457 140.39356 115.99365 167.89453 136.14648 C 184.10826 148.02096 202.68642 151.47266 218.79102 151.47266 C 232.45906 151.47266 244.29312 148.99587 251.42969 147.07812 C 285.80029 209.51275 286.02047 298.39023 283.33398 344.09375 C 282.30873 352.02121 281.5225 360.33065 280.97266 368.99219 C 263.34348 368.27763 246.454 363.19562 231.88672 354.16016 C 210.19047 340.70068 175.20748 322.63009 131.75781 312.97461 C 54.503568 295.7839 3.9282217 361.85592 1.8183594 364.67773 C 0.63870657 366.24714 0 368.15869 0 370.12305 L 0 458.63867 C -2.3684758e-15 463.30531 3.5338308 467.21327 8.1796875 467.67578 L 36.398438 470.49805 C 70.135459 473.87071 103.00314 482.4352 134.08984 495.95703 L 220.01758 533.31055 C 237.98779 541.12639 257.3937 545.03906 276.80859 545.03906 C 294.79959 545.03906 312.79423 541.68153 329.65234 534.94141 L 398.15625 507.53906 L 409.93164 504.59961 C 445.20169 495.7808 474.99889 470.64822 489.63281 437.37891 L 556.56641 285.26172 C 557.79803 282.4555 557.53401 279.2078 555.85547 276.64062 C 554.18213 274.07345 551.32321 272.52344 548.25195 272.52344 L 542.72266 272.52344 C 518.14743 272.52344 494.67428 284.25771 480.32617 303.41797 L 406.32031 388.68164 C 399.03973 376.92669 386.02155 369.08984 371.21094 369.08984 L 299.55469 369.08984 C 300.15343 363.64945 300.93867 355.5497 301.58594 344.82617 C 306.16049 311.09695 314.98918 284.4742 325.00586 263.78516 C 336.74459 268.23358 347.65633 270.4707 357.68945 270.4707 C 369.36126 270.4707 379.84877 267.45721 389.07812 261.42383 C 432.48622 233.08099 428.73853 147.95417 428.55664 144.34766 C 428.32799 139.7018 424.63351 135.98511 419.99805 135.73047 C 369.17425 132.89826 333.93007 144.20198 315.18555 169.29688 C 289.39429 203.8186 305.62266 250.50115 306.32422 252.4707 C 306.77153 253.71553 307.49069 254.83098 308.40234 255.76172 C 306.00073 260.75075 303.66537 266.03745 301.43945 271.66211 C 300.90939 263.87225 300.19904 255.87378 299.24805 247.76172 C 293.9847 202.75325 282.66283 165.10883 265.75586 135.63086 C 280.51118 103.1275 280.96898 76.105883 267.06836 55.25 C 241.64574 17.088632 175.49218 13.209952 149.4707 13.216797 z M 148.19922 31.339844 C 176.74993 31.002058 232.83315 36.613705 251.95703 65.320312 C 260.69637 78.438148 261.25493 95.844602 253.66406 117.20117 C 238.38327 96.837931 219.69023 81.669545 197.8125 72.097656 C 193.22381 70.091728 187.85554 72.186698 185.84961 76.775391 C 183.83848 81.374476 185.93736 86.727155 190.53125 88.738281 C 211.78353 98.037465 228.35009 112.80737 241.23828 130.83398 C 226.38511 134.00462 199.39066 136.70431 178.62695 121.49219 C 157.63745 106.10993 147.41452 75.802868 148.19922 31.339844 z M 403.27344 153.46484 C 405.66291 153.44794 408.1029 153.46856 410.5918 153.5293 C 410.45668 179.50244 404.89163 229.4074 379.15234 246.21875 C 367.59726 253.7643 352.36026 254.20853 333.74023 247.625 C 353.83984 214.09927 375.11462 201.30742 375.69141 200.9707 C 380.04105 198.50746 381.57851 192.98242 379.13086 188.61719 C 376.66762 184.25715 371.12891 182.68781 366.76367 185.15625 C 365.02191 186.13275 342.18686 199.47711 320.39453 234.04492 C 317.91761 220.28707 316.67353 197.6543 329.73633 180.16211 C 342.78818 162.6963 367.43131 153.71834 403.27344 153.46484 z M 534.05469 291.31641 L 473.00391 430.0625 C 460.62015 458.22865 435.39087 479.50304 405.52539 486.9707 L 393.15234 490.06836 C 392.7522 490.1671 392.36112 490.29266 391.97656 490.44336 L 322.91211 518.06836 C 292.3191 530.3066 257.47537 529.79157 227.26172 516.6543 L 141.33984 479.30078 C 108.51744 465.03062 73.820064 455.98357 38.207031 452.42383 L 18.173828 450.41797 L 18.173828 373.33594 C 27.226492 362.62552 69.323598 317.72499 127.82812 330.70117 C 168.78337 339.811 201.8245 356.87155 222.32031 369.58789 C 240.94531 381.14017 262.71977 387.24609 285.28906 387.24609 L 371.2168 387.24609 C 383.95912 387.24609 394.32617 397.61314 394.32617 410.35547 C 394.32617 423.09779 383.95393 433.4668 371.2168 433.4668 L 251.32812 433.4668 C 233.78404 433.4668 216.45246 436.27734 199.85938 441.80664 L 199.39844 441.95703 L 202.21875 450.58984 L 205.55664 459.06055 C 220.34127 454.13407 235.7432 451.63477 251.32812 451.63477 L 371.2168 451.63477 C 393.97318 451.63477 412.48828 433.11771 412.48828 410.36133 C 412.48828 410.00275 412.48305 409.65416 412.47266 409.30078 L 494.45703 314.81445 C 504.03976 302.04095 518.42299 293.61855 534.05469 291.31641 z "/>
          </mask>
      <!--     <filter id="glow">
                  <feGaussianBlur stdDeviation="2.5" result="coloredBlur"/>
                  <feMerge>
                      <feMergeNode in="coloredBlur"/>
                      <feMergeNode in="SourceGraphic"/>
                  </feMerge>
              </filter> -->
              <filter id="glow">
              <fegaussianblur class="blur" result="coloredBlur" stddeviation="4"></fegaussianblur>
              <femerge>
                <femergenode in="coloredBlur"></femergenode>
                <femergenode in="coloredBlur"></femergenode>
                <femergenode in="coloredBlur"></femergenode>
                <femergenode in="SourceGraphic"></femergenode>
              </femerge>
            </filter>
        </defs>
        <rect id=treeRect x=0 y="100%" width="100%" height="100%" mask="url(#tree)" />
        <path id=treePath filter="url(#glow)"
        d="M 149.4707 13.216797 C 143.46575 13.218376 139.59796 13.426851 138.86133 13.46875 C 134.22067 13.744175 130.54053 17.474575 130.32227 22.115234 C 127.75509 77.626457 140.39356 115.99365 167.89453 136.14648 C 184.10826 148.02096 202.68642 151.47266 218.79102 151.47266 C 232.45906 151.47266 244.29312 148.99587 251.42969 147.07812 C 285.80029 209.51275 286.02047 298.39023 283.33398 344.09375 C 282.30873 352.02121 281.5225 360.33065 280.97266 368.99219 C 263.34348 368.27763 246.454 363.19562 231.88672 354.16016 C 210.19047 340.70068 175.20748 322.63009 131.75781 312.97461 C 54.503568 295.7839 3.9282217 361.85592 1.8183594 364.67773 C 0.63870657 366.24714 0 368.15869 0 370.12305 L 0 458.63867 C -2.3684758e-15 463.30531 3.5338308 467.21327 8.1796875 467.67578 L 36.398438 470.49805 C 70.135459 473.87071 103.00314 482.4352 134.08984 495.95703 L 220.01758 533.31055 C 237.98779 541.12639 257.3937 545.03906 276.80859 545.03906 C 294.79959 545.03906 312.79423 541.68153 329.65234 534.94141 L 398.15625 507.53906 L 409.93164 504.59961 C 445.20169 495.7808 474.99889 470.64822 489.63281 437.37891 L 556.56641 285.26172 C 557.79803 282.4555 557.53401 279.2078 555.85547 276.64062 C 554.18213 274.07345 551.32321 272.52344 548.25195 272.52344 L 542.72266 272.52344 C 518.14743 272.52344 494.67428 284.25771 480.32617 303.41797 L 406.32031 388.68164 C 399.03973 376.92669 386.02155 369.08984 371.21094 369.08984 L 299.55469 369.08984 C 300.15343 363.64945 300.93867 355.5497 301.58594 344.82617 C 306.16049 311.09695 314.98918 284.4742 325.00586 263.78516 C 336.74459 268.23358 347.65633 270.4707 357.68945 270.4707 C 369.36126 270.4707 379.84877 267.45721 389.07812 261.42383 C 432.48622 233.08099 428.73853 147.95417 428.55664 144.34766 C 428.32799 139.7018 424.63351 135.98511 419.99805 135.73047 C 369.17425 132.89826 333.93007 144.20198 315.18555 169.29688 C 289.39429 203.8186 305.62266 250.50115 306.32422 252.4707 C 306.77153 253.71553 307.49069 254.83098 308.40234 255.76172 C 306.00073 260.75075 303.66537 266.03745 301.43945 271.66211 C 300.90939 263.87225 300.19904 255.87378 299.24805 247.76172 C 293.9847 202.75325 282.66283 165.10883 265.75586 135.63086 C 280.51118 103.1275 280.96898 76.105883 267.06836 55.25 C 241.64574 17.088632 175.49218 13.209952 149.4707 13.216797 z M 148.19922 31.339844 C 176.74993 31.002058 232.83315 36.613705 251.95703 65.320312 C 260.69637 78.438148 261.25493 95.844602 253.66406 117.20117 C 238.38327 96.837931 219.69023 81.669545 197.8125 72.097656 C 193.22381 70.091728 187.85554 72.186698 185.84961 76.775391 C 183.83848 81.374476 185.93736 86.727155 190.53125 88.738281 C 211.78353 98.037465 228.35009 112.80737 241.23828 130.83398 C 226.38511 134.00462 199.39066 136.70431 178.62695 121.49219 C 157.63745 106.10993 147.41452 75.802868 148.19922 31.339844 z M 403.27344 153.46484 C 405.66291 153.44794 408.1029 153.46856 410.5918 153.5293 C 410.45668 179.50244 404.89163 229.4074 379.15234 246.21875 C 367.59726 253.7643 352.36026 254.20853 333.74023 247.625 C 353.83984 214.09927 375.11462 201.30742 375.69141 200.9707 C 380.04105 198.50746 381.57851 192.98242 379.13086 188.61719 C 376.66762 184.25715 371.12891 182.68781 366.76367 185.15625 C 365.02191 186.13275 342.18686 199.47711 320.39453 234.04492 C 317.91761 220.28707 316.67353 197.6543 329.73633 180.16211 C 342.78818 162.6963 367.43131 153.71834 403.27344 153.46484 z M 534.05469 291.31641 L 473.00391 430.0625 C 460.62015 458.22865 435.39087 479.50304 405.52539 486.9707 L 393.15234 490.06836 C 392.7522 490.1671 392.36112 490.29266 391.97656 490.44336 L 322.91211 518.06836 C 292.3191 530.3066 257.47537 529.79157 227.26172 516.6543 L 141.33984 479.30078 C 108.51744 465.03062 73.820064 455.98357 38.207031 452.42383 L 18.173828 450.41797 L 18.173828 373.33594 C 27.226492 362.62552 69.323598 317.72499 127.82812 330.70117 C 168.78337 339.811 201.8245 356.87155 222.32031 369.58789 C 240.94531 381.14017 262.71977 387.24609 285.28906 387.24609 L 371.2168 387.24609 C 383.95912 387.24609 394.32617 397.61314 394.32617 410.35547 C 394.32617 423.09779 383.95393 433.4668 371.2168 433.4668 L 251.32812 433.4668 C 233.78404 433.4668 216.45246 436.27734 199.85938 441.80664 L 199.39844 441.95703 L 202.21875 450.58984 L 205.55664 459.06055 C 220.34127 454.13407 235.7432 451.63477 251.32812 451.63477 L 371.2168 451.63477 C 393.97318 451.63477 412.48828 433.11771 412.48828 410.36133 C 412.48828 410.00275 412.48305 409.65416 412.47266 409.30078 L 494.45703 314.81445 C 504.03976 302.04095 518.42299 293.61855 534.05469 291.31641 z " />
    </svg>
    <br> 
    <button id='fillTree'>fillTree</button>
    <button id='unfillTree'>unfillTree</button>`)
      updateTree('');
      //togliere br!
      $('.containerDisplaySection').fadeIn("slow");
    } else {
      $('.containerDisplaySection').fadeOut("slow");
      $('.containerDisplaySection').empty();
    }
  });

  $(".btShowEcoGauge").on("click", () => {
    ecoGaugeVisible = !ecoGaugeVisible
    if (ecoGaugeVisible) {
      if (treeVisible) {
        $(".btShowTree").click()
      } else if( ftdVisible){
        $(".btShowFtd").click()
      } else if(ftdGaugeVisible){
        $('.btShowFtdGauge').click()
      }

      $('.containerDisplaySection').addClass("gauge-container eco");
      $('.containerDisplaySection').attr('id', 'gaugeEco')
      //$('.containerDisplaySection').append('<div id="gaugeEco" class="gauge-container eco"><p class="text-white">Eco drive level</p></div>');
      updateEcoGauge('')

      $('.containerDisplaySection').fadeIn("slow");
    } else {
      $('.containerDisplaySection').fadeOut("slow");
      $('.containerDisplaySection').removeClass("gauge-container eco");
      $('.containerDisplaySection').removeAttr('id', 'gaugeEco')
      $('.containerDisplaySection').empty();
    }
  });

  $(".btShowFtd").on("click", () => {
    ftdVisible = !ftdVisible
    if (ftdVisible) { 
      if (ecoGaugeVisible) {
        $(".btShowEcoGauge").click()
      } else if(treeVisible){
        $(".btShowTree").click()
      } else if(ftdGaugeVisible){
        $('.btShowFtdGauge').click()
      }
      //Eco drive tree
      $('.containerDisplaySection').append(`<p class="text-white">Fitness to drive level: 0% </p>
    <svg version="1.1" id="ftdSVG" xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="-5 -5 568.031 568.03"
        style="enable-background:new 0 -1  568.031 568.03;" xml:space="preserve">
        <defs>
            <mask id="ftd">
            <g>
            <path d="M 256 0.5 C 193.691 0.5 143 51.191 143 113.5 C 143 148.508 159.00217 179.8478 184.07617 200.5918 C 141.08017 215.6958 103.47791 244.37695 77.378906 283.37695 C 71.235906 292.55695 73.696953 304.97809 82.876953 311.12109 C 86.293953 313.40809 90.157469 314.50195 93.980469 314.50195 C 100.43047 314.50195 106.76409 311.38605 110.62109 305.62305 C 142.93809 257.33105 196.96181 228.5 255.13281 228.5 C 313.13181 228.5 367.0643 257.19853 399.4043 305.26953 C 405.5713 314.43453 417.99811 316.86522 427.16211 310.69922 C 436.32711 304.53322 438.75975 292.10541 432.59375 282.94141 C 406.75475 244.53541 369.70705 216.19711 327.37305 201.03711 C 352.76105 180.29811 369 148.761 369 113.5 C 369 51.191 318.309 0.5 256 0.5 z M 256 40.5 C 296.252 40.5 329 73.248 329 113.5 C 329 153.752 296.252 186.5 256 186.5 C 215.748 186.5 183 153.752 183 113.5 C 183 73.248 215.748 40.5 256 40.5 z M 256.00195 279.5 C 250.92995 279.5 245.85789 282.39459 243.96289 288.18359 L 232.57422 323.21094 C 230.88022 328.38894 226.02111 330.5 220.53711 330.5 L 183.68359 330.5 C 171.42159 330.5 166.32219 347.47486 176.24219 354.63086 L 206.05859 376.13867 C 210.49459 379.33867 212.35125 385.01145 210.65625 390.18945 L 198.66016 424.99219 C 198.15316 426.54119 197.95472 428.056 198.01172 429.5 C 198.38372 438.847 210.15409 445.24097 218.74609 439.04297 L 248.56055 417.52734 C 250.77855 415.92734 253.39095 415.12891 256.00195 415.12891 C 258.61295 415.12891 261.22341 415.92734 263.44141 417.52734 L 293.25586 439.04297 C 301.84786 445.24097 313.56328 438.847 313.98828 429.5 C 314.05328 428.056 313.85856 426.54219 313.35156 424.99219 L 301.34375 390.18945 C 299.64875 385.01145 301.50541 379.33867 305.94141 376.13867 L 335.75781 354.63086 C 345.67781 347.47486 340.57936 330.5 328.31836 330.5 L 291.46484 330.5 C 285.98084 330.5 281.12273 328.38894 279.42773 323.21094 L 268.03906 288.18359 C 266.14406 282.39459 261.07395 279.5 256.00195 279.5 z M 85 349.5 C 79.928 349.5 74.857891 352.39459 72.962891 358.18359 L 61.574219 393.21094 C 59.880219 398.38894 55.019156 400.5 49.535156 400.5 L 12.681641 400.5 C 0.41964063 400.5 -4.6778125 417.47486 5.2421875 424.63086 L 35.058594 446.13867 C 39.494594 449.33867 41.35125 455.01145 39.65625 460.18945 L 27.660156 494.99219 C 27.153156 496.54119 26.952766 498.056 27.009766 499.5 C 27.381766 508.847 39.152141 515.24097 47.744141 509.04297 L 77.560547 487.52734 C 79.778547 485.92734 82.389 485.12891 85 485.12891 C 87.611 485.12891 90.221453 485.92734 92.439453 487.52734 L 122.25586 509.04297 C 130.84786 515.24097 142.56328 508.847 142.98828 499.5 C 143.05328 498.056 142.85856 496.54219 142.35156 494.99219 L 130.34375 460.18945 C 128.64875 455.01145 130.50541 449.33867 134.94141 446.13867 L 164.75781 424.63086 C 174.67781 417.47486 169.58036 400.5 157.31836 400.5 L 120.46484 400.5 C 114.98084 400.5 110.12078 398.38894 108.42578 393.21094 L 97.037109 358.18359 C 95.142109 352.39459 90.072 349.5 85 349.5 z M 427.00195 349.5 C 421.92995 349.5 416.85789 352.39459 414.96289 358.18359 L 403.57422 393.21094 C 401.88022 398.38894 397.02111 400.5 391.53711 400.5 L 354.68359 400.5 C 342.42159 400.5 337.32219 417.47486 347.24219 424.63086 L 377.05859 446.13867 C 381.49459 449.33867 383.35125 455.01145 381.65625 460.18945 L 369.66016 494.99219 C 369.15316 496.54119 368.95472 498.056 369.01172 499.5 C 369.38372 508.847 381.15409 515.24097 389.74609 509.04297 L 419.56055 487.52734 C 421.77855 485.92734 424.39095 485.12891 427.00195 485.12891 C 429.61295 485.12891 432.22341 485.92734 434.44141 487.52734 L 464.25586 509.04297 C 472.84786 515.24097 484.56328 508.847 484.98828 499.5 C 485.05328 498.056 484.85856 496.54219 484.35156 494.99219 L 472.34375 460.18945 C 470.64875 455.01145 472.50541 449.33867 476.94141 446.13867 L 506.75781 424.63086 C 516.67781 417.47486 511.57936 400.5 499.31836 400.5 L 462.46484 400.5 C 456.98084 400.5 452.12273 398.38894 450.42773 393.21094 L 439.03906 358.18359 C 437.14406 352.39459 432.07395 349.5 427.00195 349.5 z "/>
            </g>
            <filter id="glow">
              <fegaussianblur class="blur" result="coloredBlur" stddeviation="4"></fegaussianblur>
              <femerge>
                <femergenode in="coloredBlur"></femergenode>
                <femergenode in="coloredBlur"></femergenode>
                <femergenode in="coloredBlur"></femergenode>
                <femergenode in="SourceGraphic"></femergenode>
              </femerge>
            </mask>
        </defs>
        <rect id=ftdRect x=0 y="100%" width="100%" height="100%" mask="url(#ftd)" />
        <g>
        <path id='ftdPath' filter="url(#glow)" d="M 256 0.5 C 193.691 0.5 143 51.191 143 113.5 C 143 148.508 159.00217 179.8478 184.07617 200.5918 C 141.08017 215.6958 103.47791 244.37695 77.378906 283.37695 C 71.235906 292.55695 73.696953 304.97809 82.876953 311.12109 C 86.293953 313.40809 90.157469 314.50195 93.980469 314.50195 C 100.43047 314.50195 106.76409 311.38605 110.62109 305.62305 C 142.93809 257.33105 196.96181 228.5 255.13281 228.5 C 313.13181 228.5 367.0643 257.19853 399.4043 305.26953 C 405.5713 314.43453 417.99811 316.86522 427.16211 310.69922 C 436.32711 304.53322 438.75975 292.10541 432.59375 282.94141 C 406.75475 244.53541 369.70705 216.19711 327.37305 201.03711 C 352.76105 180.29811 369 148.761 369 113.5 C 369 51.191 318.309 0.5 256 0.5 z M 256 40.5 C 296.252 40.5 329 73.248 329 113.5 C 329 153.752 296.252 186.5 256 186.5 C 215.748 186.5 183 153.752 183 113.5 C 183 73.248 215.748 40.5 256 40.5 z M 256.00195 279.5 C 250.92995 279.5 245.85789 282.39459 243.96289 288.18359 L 232.57422 323.21094 C 230.88022 328.38894 226.02111 330.5 220.53711 330.5 L 183.68359 330.5 C 171.42159 330.5 166.32219 347.47486 176.24219 354.63086 L 206.05859 376.13867 C 210.49459 379.33867 212.35125 385.01145 210.65625 390.18945 L 198.66016 424.99219 C 198.15316 426.54119 197.95472 428.056 198.01172 429.5 C 198.38372 438.847 210.15409 445.24097 218.74609 439.04297 L 248.56055 417.52734 C 250.77855 415.92734 253.39095 415.12891 256.00195 415.12891 C 258.61295 415.12891 261.22341 415.92734 263.44141 417.52734 L 293.25586 439.04297 C 301.84786 445.24097 313.56328 438.847 313.98828 429.5 C 314.05328 428.056 313.85856 426.54219 313.35156 424.99219 L 301.34375 390.18945 C 299.64875 385.01145 301.50541 379.33867 305.94141 376.13867 L 335.75781 354.63086 C 345.67781 347.47486 340.57936 330.5 328.31836 330.5 L 291.46484 330.5 C 285.98084 330.5 281.12273 328.38894 279.42773 323.21094 L 268.03906 288.18359 C 266.14406 282.39459 261.07395 279.5 256.00195 279.5 z M 85 349.5 C 79.928 349.5 74.857891 352.39459 72.962891 358.18359 L 61.574219 393.21094 C 59.880219 398.38894 55.019156 400.5 49.535156 400.5 L 12.681641 400.5 C 0.41964063 400.5 -4.6778125 417.47486 5.2421875 424.63086 L 35.058594 446.13867 C 39.494594 449.33867 41.35125 455.01145 39.65625 460.18945 L 27.660156 494.99219 C 27.153156 496.54119 26.952766 498.056 27.009766 499.5 C 27.381766 508.847 39.152141 515.24097 47.744141 509.04297 L 77.560547 487.52734 C 79.778547 485.92734 82.389 485.12891 85 485.12891 C 87.611 485.12891 90.221453 485.92734 92.439453 487.52734 L 122.25586 509.04297 C 130.84786 515.24097 142.56328 508.847 142.98828 499.5 C 143.05328 498.056 142.85856 496.54219 142.35156 494.99219 L 130.34375 460.18945 C 128.64875 455.01145 130.50541 449.33867 134.94141 446.13867 L 164.75781 424.63086 C 174.67781 417.47486 169.58036 400.5 157.31836 400.5 L 120.46484 400.5 C 114.98084 400.5 110.12078 398.38894 108.42578 393.21094 L 97.037109 358.18359 C 95.142109 352.39459 90.072 349.5 85 349.5 z M 427.00195 349.5 C 421.92995 349.5 416.85789 352.39459 414.96289 358.18359 L 403.57422 393.21094 C 401.88022 398.38894 397.02111 400.5 391.53711 400.5 L 354.68359 400.5 C 342.42159 400.5 337.32219 417.47486 347.24219 424.63086 L 377.05859 446.13867 C 381.49459 449.33867 383.35125 455.01145 381.65625 460.18945 L 369.66016 494.99219 C 369.15316 496.54119 368.95472 498.056 369.01172 499.5 C 369.38372 508.847 381.15409 515.24097 389.74609 509.04297 L 419.56055 487.52734 C 421.77855 485.92734 424.39095 485.12891 427.00195 485.12891 C 429.61295 485.12891 432.22341 485.92734 434.44141 487.52734 L 464.25586 509.04297 C 472.84786 515.24097 484.56328 508.847 484.98828 499.5 C 485.05328 498.056 484.85856 496.54219 484.35156 494.99219 L 472.34375 460.18945 C 470.64875 455.01145 472.50541 449.33867 476.94141 446.13867 L 506.75781 424.63086 C 516.67781 417.47486 511.57936 400.5 499.31836 400.5 L 462.46484 400.5 C 456.98084 400.5 452.12273 398.38894 450.42773 393.21094 L 439.03906 358.18359 C 437.14406 352.39459 432.07395 349.5 427.00195 349.5 z "/>
      </g>
    </svg>
    <br> 
    <button id='fillFTD'>fillFTD</button>
    <button id='unfillFTD'>unfillFTD</button>`)
      updateFtd('');
      //togliere br!
      $('.containerDisplaySection').fadeIn("slow");
    } else {
      $('.containerDisplaySection').fadeOut("slow");
      $('.containerDisplaySection').empty();
    }
  });

  $(".btShowFtdGauge").on("click", () => {
    ftdGaugeVisible = !ftdGaugeVisible
    if (ftdGaugeVisible) {
      if (treeVisible) {
        $(".btShowTree").click()
      } else if( ftdVisible){
        $(".btShowFtd").click()
      } else if(ecoGaugeVisible){
        $('.btShowEcoGauge').click()
      }

      $('.containerDisplaySection').addClass("gauge-container ftd");
      $('.containerDisplaySection').attr('id', 'gaugeFtd')
      //$('.containerDisplaySection').append('<div id="gaugeEco" class="gauge-container eco"><p class="text-white">Eco drive level</p></div>');
      updateFtdGauge('')

      $('.containerDisplaySection').fadeIn("slow");
    } else {
      $('.containerDisplaySection').fadeOut("slow");
      $('.containerDisplaySection').removeClass("gauge-container eco");
      $('.containerDisplaySection').removeAttr('id', 'gaugeFtd')
      $('.containerDisplaySection').empty();
    }
  });

  $("body").on('click', '#fillTree', function () {
    updateTree('up');
  });

  $("body").on('click', '#unfillTree', () => {
    updateTree('down');
  });

  $("body").on('click', '#decrEcoVal', function () {
    updateEcoGauge('down')
  });

  $("body").on('click', '#incrEcoVal', () => {
    updateEcoGauge('up')
  });

  $("body").on('click', '#fillFTD', function () {
    updateFtd('up');
  });

  $("body").on('click', '#unfillFTD', () => {
    updateFtd('down');
  });

  $("body").on('click', '#decrFtdVal', function () {
    updateFtdGauge('down')
  });

  $("body").on('click', '#incrFtdVal', () => {
    updateFtdGauge('up')
  });

  $(".fuel").css('width', fuel_level + '%');
  $(".fuel").text(fuel_level + '%');

  $(".water").css('width', water_level + '%');
  $(".water").text(water_level + '%');

  $('.btShowAlarm').on("click", ()=>{
    if( $('.msgSaving').is(':hidden')){
      $('.containerDisplaySection').hide();
      $('.msgAlarm').fadeIn('slow', function(){
        $('.msgAlarm').delay(5000).fadeOut(function(){
          $('.containerDisplaySection').fadeIn();
        }); 
      });
    }
  });

  $('.btShowSavings').on("click", ()=>{
    if( $('.msgAlarm').is(':hidden')){
      $('.containerDisplaySection').hide();
      $('.msgSaving').fadeIn('slow', function(){
        $('.msgSaving').delay(5000).fadeOut(function(){
          $('.containerDisplaySection').fadeIn();
        }); 
      });
    }
    
  });

  /*   $("#fillTree").on("click", function () {
      https://stackoverflow.com/questions/42672537/how-to-animate-fill-instead-of-path-in-an-svg-progress-bar
      var bb = treePath.getBBox()
      var bby = bb.y
      var bbh = bb.height
      //---bottom of heart---
      var heartBase = bby + bbh
  
      if (level < 1) {
        level += .05
        var percent = (1 - level) * heartBase;
        $("#treeRect").attr("y", percent)
      }
  
      var iT = setInterval(donate, 50 )  
        var Donations=0
          function donate()
          {
               if(level>=1) {
                 clearInterval(iT);
               }
              var bb=treePath.getBBox()
              var bby=bb.y
              var bbh=bb.height
              //---bottom of heart---
              var heartBase=bby+bbh
          
              if(level<1)
              {
                level+=.05
                  var percent=(1-level)*heartBase;
                  $("#treeRect").attr("y",percent)
              }
          } 
    }); */

  /*   $("#unfillTree").on("click", function () {
      var bb = treePath.getBBox()
      var bby = bb.y
      var bbh = bb.height
      //---bottom of heart---
      var heartBase = bby + bbh
  
      if (level >0) {
        level -= .05
        var percent = (1 - level) * heartBase;
        $("#treeRect").attr("y", percent)
      }
      setInterval(donate, 50)
      var Donations = 1
      function donate() {
        var bb = treePath.getBBox(); //return the actual bounding box at the time the method was called
        var bby = bb.y;
        var bbh = bb.height;
        //---bottom of heart---
        var heartBase = bby + bbh;
  
        if (Donations > 0) {
          Donations -= .05
          var percent = (1 - Donations) * heartBase;
          $("#treeRect").attr("y", percent);
        }
      }
    }); */

  Gauge(
    document.getElementById("gaugeSpeed"), {
    max: 200,
    value: 0,
    unit: 'km/h',
    unity: function (unit) { return unit; },
    dialStartAngle: 90,
    dialEndAngle: -60,
    label: function (value) {
      return Math.round(value * 100) / 100;
    }

  }
  );

  Gauge(
    document.getElementById("gaugeRPM"), {
    max: 10,
    dialStartAngle: 90,
    dialEndAngle: -60,
    value: 2,
    unit: 'RPM',
    unity: function (unit) { return unit; },
    label: function (value) {
      return Math.round(value * 100) / 100;
    }
  }
  );

  /*   $('input').on("input", function () {
      $('#gaugeSpeed').empty();
      val = $(this).val();
      Gauge(
        document.getElementById("gaugeSpeed"), {
        max: 200,
        value: parseInt(val),
        unit: 'km/h',
        unity: function (unit) { return unit; },
        dialStartAngle: 90,
        dialEndAngle: -60,
        label: function (value) {
          return Math.round(value * 100) / 100;
        }
      });
    }); */



});